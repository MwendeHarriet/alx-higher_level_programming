# 3-say_my_name.txt
This modules defines a function "say_my_name(first_name, last_name="")".

Usage
=====
"say_my_name(...)" should print "My name is <first_name> <last_name>".

::
    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Donquixote", "Doflamingo")
    My name is Donquixote Doflamingo

::
    >>> say_my_name("Monkey", "D Luffy")
    My name is Cornelius Monkey D Luffy

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::
    >>> say_my_name("Roronoa")
    My name is Roronoa

Non String Names

The parameters first_name and last_name must be strings otherwise TypeError will be raised.

::
    >>> say_my_name(007, "James")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::
    >>> say_my_name("Trafalger", "$$" "Law)
    Traceback (most recent call last):
    TypeError: last_name must be a string::

::
    >>> say_my_name({"CP" 9, "Rob Lucci": No. 1)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::
    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::
    >>> say_my_name()    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

